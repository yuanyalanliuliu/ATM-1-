#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>

struct Account
{
	char username[100];
    int  idCard[19];
	char password[100];
	int tel[12];
	float money;
	float money1;
	int zh;
	
	struct Account * next;

	
};


typedef struct Account Account;

Account user[10];

Account * head=NULL;//指向头结点的指针
Account * tail=NULL;//指向尾结点的指针 
Account * curAccount=NULL;//指向当前登录账户的指针 

//找到返回1，否则返回0 
int findAccount(Account a)
{
	Account *curP=head;
	while(curP!=NULL)
	{
		if((strcmp(curP->username,a.username)==0)&&(strcmp(curP->password,a.password)==0))
		{
			curAccount=curP;
			return 1;
		}
		curP=curP->next;
	} 
	return 0;
}

void updatePassword()
{
	printf("请输入旧密码:\n");
	char oldPassword[100]={'\0'};
	scanf("%s",oldPassword);
	if(strcmp(oldPassword,curAccount->password)==0)
	{
		//让其修改 
		printf("请输入新密码：\n");
		scanf("%s",curAccount->password);
		printf("修改成功！\n");
	}
	else
	{
		printf("旧密码输入错误，拒绝修改！\n");
	} 
	
}

void homePage()
{
	system("cls");
	updatePassword(); 
}

int order=0;



void signIn()
{
	
		Account a; 
		printf("欢迎登录\n");
		printf("请输入账号：\n");
		scanf("%s",a.username);
		
		printf("请输入密码：\n");
		scanf("%s",a.password);
		
		if(findAccount(a))
		{
			homePage();
			return;
		}
		else
		{
			printf("登录失败!\n");
		}

}




void signUp()
{

	printf("欢迎使用!\n");
	printf("*******************************************\n");
	printf("请开始你的操作!\n");
	printf("*******************************************\n");
	Account a;
	printf("请输入姓名：\n");
	scanf("%s",a.username);

	printf("请输入身份证号：\n");
	scanf("%d",a.idCard);

	printf("请输入密码：\n");
	scanf("%d",a.password);

	printf("请输入电话号码：\n");
	scanf("%d",a.username);

    user[order].zh = 1000 + order;

	printf("开户成功!\n\n");

	printf("您的账号是：%d\n\n",user[order].zh);

	a.money=0.0f;
	
}





/**
如果数据加载成功返回1
否则返回0 
*/
int loadData()
{
	FILE* fp=fopen("D:/atm.txt","r");
	if(fp==NULL)
	{
		return 0; 
	}
	else
	{
		while(!feof(fp))
		{
			//创建结点：在堆上申请一块内存空间，将其地址赋值给指针newNode
			Account * newNode=(Account *)malloc(sizeof(Account)); 
			
			//结点赋值：结点初始化
			newNode->next=NULL;
			fscanf(fp,"%s %s\n",newNode->username,newNode->password);
			
			//添加结点到链表
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;
			}
			else
			{
				tail->next=newNode;
				tail=newNode;
			}
		}
		return 1;
	}

}

int main()
{
	int status=loadData();
	if(status==1)
	{
		printf("加载成功！\n");
	}
	else
	{
		printf("加载失败！\n");
	}

   
 

    time_t timestamp=time(NULL);
    printf("%ld\n",timestamp);
    char * ct=ctime(& timestamp);
    printf("%s\n",ct);

	signUp();
	signIn();

	return 0;
}
